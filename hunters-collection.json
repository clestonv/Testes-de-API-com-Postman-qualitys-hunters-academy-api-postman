{
	"info": {
		"_postman_id": "d4ecb7b5-5e93-4765-90a6-7b17016d7752",
		"name": "Quality Hunters",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32642538"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Validation Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"uuid": "aae60ce7-ac8f-48e3-8451-ebf784841ce5"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"uuid": "eed03942-b125-4c14-ac47-684aba271534"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"mail\": \"sysadmin@qacoders.com\",\n  \"password\": \"1234@Test\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/login/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0001 Login de sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"mensagem de sucesso\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.msg).to.eql(\"Olá Qa-Coders-SYSADMIN, autenticação autorizada com sucesso!\")\r",
									"\r",
									"})\r",
									"\r",
									"responseBody = pm.response.json();\r",
									"pm.environment.set(\"token\", responseBody.token);\r",
									"\r",
									"pm.environment.set(\"Email\", pm.variables.replaceIn('{{$randomEmail}}'));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"uuid": "24ca742d-64ed-4077-aeed-34b1154fd0dc"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"uuid": "837f34e1-caef-4460-b6d3-2b7afe104a12"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"mail\": \"sysadmin@qacoders.com\",\n  \"password\": \"1234@Test\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/login/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0002 Não funcional - Email Vazio e senha preenchida",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \" \",\r\n  \"password\": \"1234@Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0003 Não funcional - Senha Vazia e email preenchido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"alert\", function(){\r",
									"    pm.expect(pm.response.json().alert).to.eql([\"Os dados informados são inválidos\"])\r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"uuid": "0ff568de-f5bb-4fde-9fb0-9b28be6e25f4"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"uuid": "7c791466-1ed2-45ee-a6b0-fc415385bfbd"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"mail\": \"sysadmin@qacoders.com\",\n  \"password\": \" \"\n}"
						},
						"url": {
							"raw": "{{url}}/api/login/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0006 Não funcional -  Login com email e senha contendo espaço em branco",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"alert\", function () {\r",
									"    pm.expect(pm.response.json().alert[0]).to.eql(\"Os dados informados são inválidos\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"sysadmin @qacoders.com\",\r\n  \"password\": \"1234 @Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0009 Não funcional -  login invalido e senha válida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"alert\", function () {\r",
									"    pm.expect(pm.response.json().alert[0]).to.eql(\"Os dados informados são inválidos\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"ysadmin @qacoders.com\",\r\n  \"password\": \"1234@Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cadastro de novo login",
			"item": [
				{
					"name": "Teste de Sucesso",
					"item": [
						{
							"name": "CT-0001 Funcional - campo nome completo  preenchido",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);\r",
											"\r",
											"\r",
											"function firstName() {\r",
											" var firstName = [\"Nara\", \"Cyntia\", \"Fabiano\", \"Mara\", \"Rubia\", \"Flavia\", \"Nubia\", \"Lucielle\", \"Aparecida\", \"Rodrigo\", \"Jose\", \"Kelly\", \"Cristina\", \"Luciana\", \"Lana\", \"Marcia\", \"Luiz\", \"Marcio\", \"Iraides\", \"Ana\", \"Pedro\", \"Maria\", \"João\",\r",
											" \"Mariana\", \"Lucas\", \"Carla\", \"Gustavo\", \"Juliana\", \"Rafael\"];\r",
											" var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											" return randomItem;\r",
											"\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstName());\r",
											"\r",
											"\r",
											"function lastName() {\r",
											" var lastName = [\"Silva\", \"Marquez\", \"Gonçalves\", \"Santos\", \"Bueno\", \"Danesi\", \"Arruda\", \"Cardoso\", \"Fonseca\", \"Smith\", \"Pascoalle\", \"Marques\"];\r",
											" var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											" return randomItem;\r",
											"\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastName());\r",
											"\r",
											"\r",
											"pm.environment.set(\"FullName\", pm.variables.get(\"FirstName\") + \" \" + pm.variables.get(\"LastName\"));\r",
											"\r",
											"pm.environment.set(\"Email\", pm.variables.replaceIn('{{$randomEmail}}'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "bf5cad20-2bb3-4013-b1ad-a916ef793686"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "8cbd96d7-6bca-46c5-a094-3206154cbf1f"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "f3560648-4afb-4b70-a3ca-610e1863dc78"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"{{FullName}}\",\n  \"mail\": \"{{Email}}\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0002 Funcional -  campo nome completo  maximo 100 caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "in",
											"value": "query",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "20f8247c-d471-4e5d-b4d9-a18f1a4a8c5a"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "d022b5b3-2159-43f7-b120-3eaab2791268"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "56ed746c-1cee-41e9-9008-e648c9fcc620"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fullName\": \"Nara Cyntia Marquez Nara Cyntia Marquez Nara Cyntia Marquez Nara Cyntia Marquez Nara Cyntia Marquezm\",\n \"mail\": \"{{$randomEmail}}\",\n    \"password\": \"1234@Test\",\n    \"accessProfile\": \"ADMIN\",\n    \"cpf\": \"{{randomNumber}}\",\n    \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0003 - Enviar com o campo email valido",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code mail has string\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "733de15d-4e99-4e5e-acaa-bb0c03385a51"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "868bd930-0b5e-442d-b353-a6e330c00e3a"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "000885db-bb36-4146-aa9d-5e84daa91c1a"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"{{FullName}}\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0018 - Campo email obrigatorio",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo obrigatorio\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\"])\r",
											"\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "9619ef8a-2d42-4e28-b759-05bd7b562cc2"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "2c3a8b17-d9e8-4064-8508-30ed49222b5a"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "8863da77-a4e2-419e-8279-f7291b376a4d"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"{{FullName}}\",\n  \"mail\": \" \",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0007 - Senha - deve conter no mínimo 8 caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code senha has string\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "abb47f52-7e8a-4ca4-9384-14a53b21c1a7"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "1ed1a932-ad6b-430f-a3ee-6ac6e81a1528"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "afc374c9-986c-4a53-8bc1-ff4c5b66d056"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"{{FullName}}\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0012 - Senha - Deve conter menos uma letra maiúscula, minúscula, caractere especial e números.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 201', function () {\r",
											"    pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"pm.test(\"password is a string\", function () {\r",
											"    pm.expect(typeof pm.response.json().user.password).to.be.a('string');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "cb8584af-a4fc-406f-b6f7-587ec9488137"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "17df488b-b21a-4798-acec-b4281ae7e22e"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "8ec941e8-acf6-4cce-8a62-ea36eb1e3a96"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"Nara Cyntia Marquez\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@Test1\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test1\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0014 - Senha - validar campo vazio",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"mensagem de erro\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"O campo de confirmação de senha não pode ficar vazio.\"])\r",
											"\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "bb5e5613-5bf9-44f3-9428-4a84180f816f"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "c9043cbf-f258-4e4f-864f-14dd77ef0ed6"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "b9392bc1-c30a-4daa-95b4-ceef80d4130a"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"Nara Cyntia Marquez\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"\"\n}\n\n"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0016 - verificar retorno de \"as senhas não conferem\"",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"mensagem de erro\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"As senhas não coincidem.\"])\r",
											"\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "in",
											"value": "query",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{novotoken}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "931bc146-02e2-4acf-a8ab-2386daa0f434"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "62e1c6b7-b783-42bb-815b-71404c3d2edc"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "df59c39a-f07f-4b04-92ae-229be1de6f99"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"Nara Cyntia Marquez\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test123456780123456789\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0017 - Confirmar Senha obrigatório",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code senha has string\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "4eba895b-e8c7-4bfd-b642-7cfe5b7cff25"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "6068b61d-7f97-4e86-95ab-03525db6d398"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "c57cc507-236d-4867-8ec0-967ccaa26d1c"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"Nara Cyntia Marquez\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0021 - Validar que não há espaços no campo email.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"123 4@Test.com\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{randomNumber}}\",\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Regras de excessão",
					"item": [
						{
							"name": "CT-0004 - Nome obrigatório não preenchido",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.replaceIn('{{$randomEmail}}')\r",
											"\r",
											"\r",
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"mensagem de error\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"Informe o nome e sobrenome com as iniciais em letra maiúscula.\"])\r",
											"\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "9b2727c8-9d9e-4361-98cb-98c6347072a5"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "a8c73b34-1c25-4f9a-9d46-97fab893b535"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "1b9a9b41-626a-43a8-866d-fc9c91537ca4"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"{{}}\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0006 - Enviar com o campo nome completo  até 101 caracteres",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"mensagem de sucesso\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"O nome completo deve ter no máximo 100 caracteres.\"])\r",
											"\r",
											"})\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "31c587e9-56ae-46d0-8eac-de83501bbdad"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "db230ce7-a068-4acc-9531-e45d129248c6"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "48ad854b-efb0-4921-af75-b86c40424453"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"Nara Cyntia Marquez Nara Cyntia Marquez Nara Cyntia Marquez Nara Cyntia Marquez Nara Cyntia Marquezmn\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0010 - Senha - enviar com 7 caracteres - minimo 8",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"mensagem de erro\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-16.\",\r",
											"        \"As senhas não coincidem.\"])\r",
											"\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "a40fa168-486c-4dc9-b12e-c976d2f6348c"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "f31424f5-2dd5-4f45-b5b2-549877ff6604"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "d79dd6bd-97f5-43ae-9c9f-cfcc912b2cde"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"Nara Cyntia Marquez\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@Te\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0011 - Senha - enviar com 13 caracteres - maximo 12",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"mensagem de erro\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-16.\"])\r",
											"\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "46115e35-985b-4815-b3be-299d974d2061"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "6b2c83c3-b442-4be0-abfa-081741b6b83e"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "15802db0-f814-418d-ac49-d62354c710ca"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"Nara Cyntia Marquez\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@Test123456780123456789\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test123456780123456789\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0013 - Senha - Deve conter menos uma letra maiúscula, minúscula, caractere especial e números. Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"mensagem de erro\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-16.\"])\r",
											"\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "c7966bac-cb58-4988-8206-f6cea32655b7"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "62a9cb79-1e30-4fc0-8a9b-4c12997392fc"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "fad0b027-fef5-4f81-aba8-b27b78620954"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"Nara Cyntia Marquez\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234Test1\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234Test1\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0014 - Senha - validar campo vazio",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"mensagem de erro\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"Campo senha é obrigatório\"])\r",
											"\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "d23a55f4-cfda-4378-b82b-374b05f1aa13"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "dcda6509-00b8-4e27-ba35-a63a1b062881"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "8e971c18-4fc6-4c8b-b8af-762c6feda660"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"Nara Cyntia Marquez\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0019 - Campo nome Completo dever conter no mínimo duas palavras compostas - Nome e Sobrenome",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.replaceIn('{{$randomFullName}}')\r",
											"\r",
											"pm.variables.replaceIn('{{$randomEmail}}')\r",
											"\r",
											"\r",
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"mensagem de error\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"Informe o nome e sobrenome com as iniciais em letra maiúscula.\"])\r",
											"\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "3df9dcaa-3eae-4dd1-85bc-94586731adad"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "fc17eae2-aee3-497a-a3e0-e446c89ed322"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "bb893057-2dfb-4f3a-97bd-799d126b9869"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"Nara\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0024 - Não funcional - email com TLDs invalidos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test(\"mensagem de erro\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\"])\r",
											"\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NWVjODNhYjRhODUyNGNkYzI2ZTU4MmEiLCJmdWxsTmFtZSI6Ik5hcmEgVGVzdGUgRWRpdGFyIiwibWFpbCI6Im5hcmF0ZXN0QHRlc3QuY29tLmJyIiwicGFzc3dvcmQiOiIkMmIkMTAkeWhyQ1gxZTVLaDR3Q3pSZE96emJqT3h4RDhKTlBBRmhuY2JXWGNIcTZqeFl4bU9hc21lV08iLCJhY2Nlc3NQcm9maWxlIjoiQURNSU4iLCJjcGYiOiIxMTEyMjIzMzU0NCIsInN0YXR1cyI6dHJ1ZSwiYXVkaXQiOlt7InJlZ2lzdGVyZWRCeSI6eyJ1c2VySWQiOiI2NTMzMGZlZWU3NjA2NGY0NTlkNWYxMGQiLCJ1c2VyTG9naW4iOiJzeXNhZG1pbkBxYWNvZGVycy5jb20ifSwicmVnaXN0cmF0aW9uRGF0ZSI6InPDoWJhZG8sIDA5LzAzLzIwMjQsIDEyOjQzOjM5IEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IlFhQ29kZXJzLTI2NjMiLCJfaWQiOiI2NWVjODNhYjRhODUyNGNkYzI2ZTU4MmIifV0sIl9fdiI6MCwiaWF0IjoxNzEwMTc1MzIzLCJleHAiOjE3MTAyNjE3MjN9.5O_497uwpwCxmqfgER_sgT35FKYhKqo4Jk4RumywqGM",
										"type": "text",
										"uuid": "b0189c52-f4be-4b38-8c30-0512cd484839"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Teste do Email\",\r\n  \"mail\": \"koalatest@out.lokk.c\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"22131111112\",\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0025 - Não funcional - email inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test(\"mensagem de erro\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\"])\r",
											"\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"emailinvalido??hotmail.com\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{randomNumber}}\",\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0026 Não Funcional -  mensagem de retorno em caso fora da regra",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"mensagem de sucesso\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\"])\r",
											"\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "00bf1ff3-dddc-4ce6-be05-c053d7b6bcd1"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "109fe467-bf26-4174-aef6-4b750908f928"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "158e3181-9d33-4aff-906a-b5e582ae59bb"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"Nara Cyntia Marquez\",\n  \"mail\": \"teste89@.com.br\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CT-0027 - Enivar nome com caracteres especiais e numeros - o campo aceita apenas letras",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.replaceIn('{{$randomEmail}}')\r",
											"\r",
											"\r",
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"mensagem de error\", function(){\r",
											"    pm.expect(pm.response.json().error).to.eql([\"Informe o nome e sobrenome com as iniciais em letra maiúscula.\"])\r",
											"\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "0d9b3f1a-a962-47a1-ae12-c1635b8296fe"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "72c5c43a-23aa-48af-8c5f-ba659527de53"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "3be2523f-cd7c-4adb-b4d7-872cf1f978aa"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"1Nara@#$% C123456 M@#$%rquez\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Lista de cadastro de login",
			"item": [
				{
					"name": "Teste de sucesso",
					"item": [
						{
							"name": "Criando usuario",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.replaceIn('{{$randomEmail}}')\r",
											"\r",
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Save user ID to environment variable\", function () {\r",
											"    pm.expect(responseData.user._id).to.exist;\r",
											"    pm.environment.set(\"IdUser\", responseData.user._id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "82aad9d3-81aa-4549-892b-fd40a626f2f8"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "250c33ed-6f5d-409e-860e-c7ab1f1275b0"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "6eb4ac4d-05ed-4a87-a4c5-d99b23f84c49"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"Luiza Marquez Barcelos Fernandes\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "contagem de usuarios",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.replaceIn('{{$randomEmail}}')\r",
											"\r",
											"// Gerar um número aleatório com 11 dígitos\r",
											"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
											"\r",
											"// Converter para string\r",
											"var randomString = randomNumber.toString();\r",
											"\r",
											"// Definir a variável de ambiente com o número gerado\r",
											"pm.environment.set(\"randomNumber\", randomString);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "in",
											"value": "query",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{novotoken}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "e57ced25-9f30-4545-bb22-4511cd8bdd6c"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"uuid": "0866857b-3e21-4776-bfcf-8c0e814be980"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
										"type": "text",
										"uuid": "c135cebf-b5a2-4e7e-ab31-b3935ad9d138"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/user/count",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Lista de usuarios",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "in",
											"value": "query",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{novotoken}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "b4c991c0-567b-4035-bdac-c26d7616e9e1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Busca de usuario pelo Id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "in",
											"value": "query",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{novotoken}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "a12a307d-4a92-4b6d-a5c4-d34458978c72"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/{{IdUser}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"{{IdUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retornar 50 registros",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body length is 50\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData).to.have.length(50);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "in",
											"value": "query",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{novotoken}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"uuid": "57dd01bf-63b3-43cd-9afe-6ecf1f467b50"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/?limits=50",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									],
									"query": [
										{
											"key": "limits",
											"value": "50"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Excluir cadastro",
			"item": [
				{
					"name": "Cadastro novo user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Gerar um número aleatório com 11 dígitos\r",
									"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
									"\r",
									"// Converter para string\r",
									"var randomString = randomNumber.toString();\r",
									"\r",
									"// Definir a variável de ambiente com o número gerado\r",
									"pm.environment.set(\"randomNumber\", randomString);\r",
									"\r",
									"\r",
									"function firstName() {\r",
									" var firstName = [\"Nara\", \"Cyntia\", \"Fabiano\", \"Mara\", \"Rubia\", \"Flavia\", \"Nubia\", \"Lucielle\", \"Aparecida\", \"Rodrigo\", \"Jose\", \"Kelly\", \"Cristina\", \"Luciana\", \"Lana\", \"Marcia\", \"Luiz\", \"Marcio\", \"Iraides\", \"Ana\", \"Pedro\", \"Maria\", \"João\",\r",
									" \"Mariana\", \"Lucas\", \"Carla\", \"Gustavo\", \"Juliana\", \"Rafael\"];\r",
									" var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									" return randomItem;\r",
									"\r",
									"}\r",
									"pm.environment.set(\"FirstName\", firstName());\r",
									"\r",
									"\r",
									"function lastName() {\r",
									" var lastName = [\"Silva\", \"Marquez\", \"Gonçalves\", \"Santos\", \"Bueno\", \"Danesi\", \"Arruda\", \"Cardoso\", \"Fonseca\", \"Smith\", \"Pascoalle\", \"Marques\"];\r",
									" var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									" return randomItem;\r",
									"\r",
									"}\r",
									"pm.environment.set(\"LastName\", lastName());\r",
									"\r",
									"\r",
									"pm.environment.set(\"FullName\", pm.variables.get(\"FirstName\") + \" \" + pm.variables.get(\"LastName\"));\r",
									"\r",
									"pm.environment.set(\"Email\", pm.variables.replaceIn('{{$randomEmail}}'));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"uuid": "63280419-d4ff-4832-8e00-4431551485e4"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"uuid": "b0629e94-1d80-4c85-9a7b-f444b8736e8e"
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
								"type": "text",
								"uuid": "1fcc9001-e277-4a72-b511-0c70e11a1ccc"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"Novo User\",\n  \"mail\": \"{{Email}}\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/user/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar usuario",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"msg\", function(){",
									"    pm.expect(pm.response.json().msg).to.eql(\"Usuário deletado com sucesso!.\")",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"uuid": "9a5bf8b7-4f80-4161-8381-fc2b90c720b2"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"uuid": "b56deace-ba3d-4766-b1c4-229c5c083f6a"
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
								"type": "text",
								"uuid": "c4591d4d-cb88-43ac-abba-ff5a1c323ed6"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/user/654d4b07fa70d53075c833b3",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"654d4b07fa70d53075c833b3"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0001 - Validar se o cadastro foi deletado",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"alert\", function(){\r",
									"    pm.expect(pm.response.json().alert).to.eql([\"Esse usuário não existe em nossa base de dados.\"])\r",
									"\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"uuid": "a3a50dc5-77ec-41e0-8020-99ea9fe71f91"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"uuid": "883429dc-493d-4002-81a5-af9d6fefe19d"
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
								"type": "text",
								"uuid": "8d9a55f9-c514-462c-ba12-bbd2b84799e0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/user/65dcfc6ab3cb7c4857eee76f",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"65dcfc6ab3cb7c4857eee76f"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0003 - Validar se houve atualização da lista após exclusão",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"alert\", function(){\r",
									"    pm.expect(pm.response.json().alert).to.eql([\"Esse usuário não existe em nossa base de dados.\"])\r",
									"\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"uuid": "47207d4e-a859-4155-a332-cc7e0e3943dc"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"uuid": "19e1e17a-227b-4090-a747-e00876eefdfa"
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
								"type": "text",
								"uuid": "efe3f2eb-d689-484f-9aed-a7c4cde9611d"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/user/65dcfc6ab3cb7c4857eee76f",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"65dcfc6ab3cb7c4857eee76f"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0003 - Validar se houve atualização da lista após exclusão",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/user/65dcfc6ab3cb7c4857eee76f",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"65dcfc6ab3cb7c4857eee76f"
							]
						}
					},
					"response": []
				},
				{
					"name": "Lista user count",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"[Ontem 20:35] maruyama_thiago (Convidado)\r",
									"//ANTES\r",
									" \r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"var responseBody = pm.response.json();\r",
									"if (responseBody && responseBody.count) {\r",
									"    pm.environment.set(\"count\", responseBody.count);\r",
									"}\r",
									" \r",
									"[Ontem 20:35] maruyama_thiago (Convidado)\r",
									"//DEPOIS\r",
									" \r",
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"var responseBody = pm.response.json();\r",
									"var countAfter = responseBody.count;\r",
									"var count = pm.environment.get(\"count\");\r",
									"pm.environment.set(\"countAfter\", countAfter);\r",
									" \r",
									"pm.test('Teste de contagem pós criação', function() {\r",
									"    pm.expect(countAfter).to.eql(count+1);\r",
									"});\r",
									" \r",
									"console.log(count);\r",
									"console.log(countAfter);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "query",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{novotoken}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/user/count",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"count"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Editar Cadastro de login",
			"item": [
				{
					"name": "Criando novo Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.replaceIn('{{$randomEmail}}')\r",
									"\r",
									"// Gerar um número aleatório com 11 dígitos\r",
									"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
									"\r",
									"// Converter para string\r",
									"var randomString = randomNumber.toString();\r",
									"\r",
									"// Definir a variável de ambiente com o número gerado\r",
									"pm.environment.set(\"randomNumber\", randomString);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"    "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Teste Nara NLogin\",\r\n  \"mail\": \"testenaralogin43@qacoders.comm\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{randomNumber}}\",\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login novo user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"    pm.environment.set(\"novotoken\", responseBody.token);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\": \"testenaralogin43@qacoders.comm\",\r\n    \"password\": \"1234@Test\"\r\n  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('UserId', pm.response.json().user_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Gerar um número aleatório com 11 dígitos\r",
									"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
									"\r",
									"// Converter para string\r",
									"var randomString = randomNumber.toString();\r",
									"\r",
									"// Definir a variável de ambiente com o número gerado\r",
									"pm.environment.set(\"randomNumber\", randomString);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "query",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{novotoken}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Teste Nara NLogin\",\r\n  \"mail\": \"testenaralogin18@qacoders.comm\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{randomNumber}}\",\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/65f5f6dc1041ed42b2a2975a",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"65f5f6dc1041ed42b2a2975a"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0011 - Senha - enviar com 13 caracteres - regra de excessão",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.replaceIn('{{$randomEmail}}')\r",
									"\r",
									"// Gerar um número aleatório com 11 dígitos\r",
									"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
									"\r",
									"// Converter para string\r",
									"var randomString = randomNumber.toString();\r",
									"\r",
									"// Definir a variável de ambiente com o número gerado\r",
									"pm.environment.set(\"randomNumber\", randomString);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"msg\", function () {",
									"    pm.expect(pm.response.json().msg).to.equal(\"Dados atualizados com sucesso!\");",
									"});",
									"",
									"pm.test(\"Password length is 13 characters\", function () {",
									"    const responseBody = pm.response.text();",
									"    const passwordLength = pm.response.json().updatedUser.password.length;",
									"    pm.expect(passwordLength).to.equal(18);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "query",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{novotoken}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"uuid": "61ebc79b-61c2-4fb0-86d2-afdf4d66440a"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"uuid": "86cd9988-5dec-4cbd-816a-a113d67bb28b"
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
								"type": "text",
								"uuid": "a6c8467c-8b3c-48e0-9e3e-a3e9a448d6ad"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \n  \"password\": \"1234@Testhj1980102192125\",\n   \"confirmPassword\": \"1234@Testhj1980102192125\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/user/{{UserId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{{UserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0012 - Senha - Deve conter menos uma letra maiúscula, minúscula, caractere especial e números",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Gerar um número aleatório com 11 dígitos\r",
									"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
									"\r",
									"// Converter para string\r",
									"var randomString = randomNumber.toString();\r",
									"\r",
									"// Definir a variável de ambiente com o número gerado\r",
									"pm.environment.set(\"randomNumber\", randomString);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"password is change\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.updatedUser.mail).to.exist.and.to.not.equal(\"1234@Test1\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "query",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{novotoken}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"uuid": "c60da5ea-f1a3-4e02-9986-d5a6799bcb4e"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"uuid": "d10de92c-725c-49ca-8e30-364256abd9b2"
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
								"type": "text",
								"uuid": "a63bbfc3-e9d3-43b8-b842-c01b88136ca0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"Nara Cyntia Marquez\",\n  \"mail\": \"{{$randomEmail}}\",\n  \"password\": \"1234@TestPUT\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@TestPUT\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/user/{{UserId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{{UserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0014 - Editar Senha - campo vazio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Gerar um número aleatório com 11 dígitos\r",
									"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
									"\r",
									"// Converter para string\r",
									"var randomString = randomNumber.toString();\r",
									"\r",
									"// Definir a variável de ambiente com o número gerado\r",
									"pm.environment.set(\"randomNumber\", randomString);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Error message is correct\", function(){",
									"    pm.expect(pm.response.json().error).to.eql([",
									"        \"Invalid value\",",
									"       \"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\",",
									"         \"As senhas não coincidem.\"",
									"    ]);",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "query",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{novotoken}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"uuid": "e9139700-72a6-4f32-a252-3b719f013299"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"uuid": "cd652c4d-5e80-4a42-a1d5-405ec0f87397"
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
								"type": "text",
								"uuid": "83ec6a3a-b1e5-4f2e-9976-3695ad4aedfe"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"password\": \" \",\n  \"confirmPassword\": \"1234@Test\"\n}\n\n"
						},
						"url": {
							"raw": "{{url}}/api/user/password/{{UserId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"password",
								"{{UserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0019 - Campo nome Completo dever conter no mínimo duas palavras compostas - Nome e Sobrenome",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.replaceIn('{{$randomEmail}}')\r",
									"\r",
									"// Gerar um número aleatório com 11 dígitos\r",
									"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
									"\r",
									"// Converter para string\r",
									"var randomString = randomNumber.toString();\r",
									"\r",
									"// Definir a variável de ambiente com o número gerado\r",
									"pm.environment.set(\"randomNumber\", randomString);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"msg\", function () {\r",
									"    pm.expect(pm.response.json().msg).to.equal(\"Dados atualizados com sucesso!\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "query",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{novotoken}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"uuid": "b5fc7018-e829-43d1-ab8c-38f1fdf7c82f"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"uuid": "dcf2763c-f592-439f-936f-6c10e5267d98"
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGU3ZjBlMTZiYmU3M2VkMWUxYzEiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRZWWpPM1d3ZlgwOHROMHJTWkQ1UVVlWW0wb2h1cGJCTkdzZnFUc3hnUHdIalMyYnFvcGR1eSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjM0OjIzIEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlN2YwZTE2YmJlNzNlZDFlMWMyIn1dLCJfX3YiOjAsImlhdCI6MTcwOTIzMzQxNiwiZXhwIjoxNzA5MzE5ODE2fQ.AifdGJewaXsoJqvsOy7j4b2Q9MpNGGoeclHNfStrHHc",
								"type": "text",
								"uuid": "70aae52c-8310-46a8-a90b-4e0d3ca776a3"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"Teste Nara Edite\",\n  \"mail\": \"testenaralogin0@qacoders.com\",\n  \"password\": \"1234@Test\",\n  \"accessProfile\": \"ADMIN\",\n  \"cpf\": \"{{randomNumber}}\",\n  \"confirmPassword\": \"1234@Test\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/user/{{UserId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{{UserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0020 - Edite Email no formato domínios validos.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.replaceIn('{{$randomEmail}}')\r",
									"\r",
									"// Gerar um número aleatório com 11 dígitos\r",
									"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
									"\r",
									"// Converter para string\r",
									"var randomString = randomNumber.toString();\r",
									"\r",
									"// Definir a variável de ambiente com o número gerado\r",
									"pm.environment.set(\"randomNumber\", randomString);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"response mail is change\", function () {",
									"    var responseJSON = pm.response.json();",
									"    pm.expect(responseJSON).to.be.an('object');",
									"    pm.expect(responseJSON.updatedUser.mail).to.exist.and.to.not.equal(\"testenaralogin01@qacoders.com\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "query",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{novotoken}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Teste Nara NLogin\",\r\n  \"mail\": \"testenaralogin44@qacoders.com\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{randomNumber}}\",\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/{{UserId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{{UserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT-0022 - Campo email vazio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.replaceIn('{{$randomEmail}}')\r",
									"\r",
									"// Gerar um número aleatório com 11 dígitos\r",
									"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
									"\r",
									"// Converter para string\r",
									"var randomString = randomNumber.toString();\r",
									"\r",
									"// Definir a variável de ambiente com o número gerado\r",
									"pm.environment.set(\"randomNumber\", randomString);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {",
									"    pm.response.to.have.status(400);",
									"})",
									"",
									"pm.test(\"mail is Null\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"is Null\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "query",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{novotoken}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Teste Nara NLogin\",\r\n  \"mail\": \" \",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{randomNumber}}\",\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/{{UserId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{{UserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "atualizar a senha de um usuário passando o id.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.replaceIn('{{$randomEmail}}')\r",
									"\r",
									"// Gerar um número aleatório com 11 dígitos\r",
									"var randomNumber = Math.floor(Math.random() * 90000000000) + 10000000000;\r",
									"\r",
									"// Converter para string\r",
									"var randomString = randomNumber.toString();\r",
									"\r",
									"// Definir a variável de ambiente com o número gerado\r",
									"pm.environment.set(\"randomNumber\", randomString);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"response password is change\", function () {",
									"    var responseJSON = pm.response.json();",
									"    pm.expect(responseJSON).to.be.an('object');",
									"    pm.expect(responseJSON.msg).to.exist.and.to.not.equal(\"1234@Testhj1603\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "query",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{novotoken}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"password\": \"1234@Testhj16032\",\r\n\"confirmPassword\": \"1234@Testhj16032\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/password/65f219158efba4f7dc646edb",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"password",
								"65f219158efba4f7dc646edb"
							]
						}
					},
					"response": []
				},
				{
					"name": "atualizar o status de um usuário passando o id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response status is change\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.msg).to.exist.and.to.not.equal(\"true\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "query",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{novotoken}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": false\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/status/65f0c311599d0a852aaec2c6",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"status",
								"65f0c311599d0a852aaec2c6"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "in",
				"value": "query",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "token",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://a-super-maquina.qacoders-academy.com.br"
		}
	]
}